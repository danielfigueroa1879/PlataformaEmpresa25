# .env.example
VITE_API_URL=http://localhost:3000/api
VITE_APP_NAME=Plataforma Global CapacitaciÃ³n
VITE_APP_VERSION=1.0.0
VITE_ENVIRONMENT=development

# JWT Secret (Backend)
JWT_SECRET=tu_jwt_secret_muy_seguro_aqui

# Database
DATABASE_URL=postgresql://usuario:password@localhost:5432/global_capacitacion

# File Storage
STORAGE_TYPE=local
AWS_BUCKET_NAME=global-capacitacion-files
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_access_key
AWS_SECRET_ACCESS_KEY=your_secret_key

# Email Service
EMAIL_SERVICE=smtp
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=noreply@globalcapacitacion.cl
SMTP_PASS=your_email_password

# Docker Compose (docker-compose.yml)
version: '3.8'

services:
  frontend:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
      - postgres

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:pass@postgres:5432/globalcap
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=globalcap
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

# Dockerfile
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./
RUN npm ci --only=production

COPY . .
RUN npm run build

EXPOSE 3000

CMD ["npm", "run", "preview"]

# GitHub Actions (.github/workflows/deploy.yml)
name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test
    
    - name: Build
      run: npm run build
      
    - name: Deploy to Vercel
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}

# Scripts de desarrollo (scripts/dev.sh)
#!/bin/bash

echo "ðŸš€ Iniciando entorno de desarrollo..."

# Instalar dependencias si no existen
if [ ! -d "node_modules" ]; then
    echo "ðŸ“¦ Instalando dependencias..."
    npm install
fi

# Copiar archivo de environment si no existe
if [ ! -f ".env.local" ]; then
    echo "ðŸ“„ Copiando archivo de configuraciÃ³n..."
    cp .env.example .env.local
fi

# Iniciar servidor de desarrollo
echo "ðŸŽ¯ Iniciando servidor en http://localhost:5173"
npm run dev